
function check_data_type
{
    while true
    do
  echo "please enter it' datatype number or string:"
  read data_type

   
    if [[ -z $data_type ]]
    then
     echo "must not be empty"
 
     elif [ $data_type == "number" ];then
     echo "your datatype is number" 
     data_types+=("$data_type")
     echo "your pk type is recorded"
     break

     elif [ $data_type == "string" ] 
     then
     echo "your datatype is string"
     data_types+=("$data_type")
     echo "your pk type is recorded"
     break

     else
   
     echo "this type is not supported" 
   break

  fi

 done

}
function file_exist
{
   if test -f "$filename"
   then
   return 1
   else
   return 0
   fi

}
function check_database_exist() 
{
if [ -d $1 ]; then
  return 1
else
  return 0
fi


} 

function print_names() {
	for i in "${column_names[@]}"; do
		printf '%s' "$i:" >>"$filename"
                printf '%s' "$i      |" 


	done
	printf "\n" >>"$filename"

}
function get_structure_of_table
{
	 #must $ not have a space and ifs to separate files
	  pk_index=$(sed -n 1p "$filename") 
           read -r pk<<< "$pk_index"
	  names=$(sed -n 2p "$filename")
	  IFS=':' read -r -a col_names <<< "$names"
	  types=$(awk 'NR == 3' "$filename")
	  IFS=':' read -r -a  col_types <<< "$types"

}
function check_pk
{
         	  #ids=$(awk -F":" 'NR>3 {print '$'$pk}' "$filename" | cut -f $pk )
	  ids=$(awk -F":" 'NR>3 {print '$'$pk}' "$filename" | cut -d":" -f $pk | tr '\n' ' ')
	    read -r -a myids <<< "$ids"
	   
	   length="${#myids[@]}" 
	  flag=0
	   
	  for ((i=0;i<length;i++)) 
	  do

	     if [[ ${myids[$i]} == $1 ]]
	     then
		flag=1
		break;

		
	     else
		 flag=0

	     fi 
	  done
	  return $flag
	 

}
function get_All_Data
{

  names=$(awk 'NR>3' "$filename")
  echo "$names"
  

}

